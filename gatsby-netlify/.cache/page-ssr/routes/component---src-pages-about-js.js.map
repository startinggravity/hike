{"version":3,"file":"component---src-pages-about-js.js","mappings":"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","sources":["webpack://hike-with-gravity/./node_modules/camelcase/index.js","webpack://hike-with-gravity/../src/image-utils.ts","webpack://hike-with-gravity/../src/components/hooks.ts","webpack://hike-with-gravity/../src/components/picture.tsx","webpack://hike-with-gravity/../src/components/placeholder.tsx","webpack://hike-with-gravity/../src/components/main-image.tsx","webpack://hike-with-gravity/../src/components/layout-wrapper.tsx","webpack://hike-with-gravity/../src/components/gatsby-image.server.tsx","webpack://hike-with-gravity/../src/components/static-image.server.tsx","webpack://hike-with-gravity/./src/components/field/subtitle.js","webpack://hike-with-gravity/./src/components/field/title.js","webpack://hike-with-gravity/./src/pages/about.js"],"sourcesContent":["'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {SERVER ? <NativeScriptLoading /> : null}\n      </Fragment>\n    )\n  }\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import React from \"react\";\n\nexport default function PostSubTitle({ children }) {\n  return (\n    <h2 className=\"text-gray-100 font-extrabold text-4xl md:text-5xl lg:text-7xl leading-none\">\n      {children}\n    </h2>\n  )\n}\n","import React from \"react\";\n\nexport default function PostTitle({ children }) {\n  return (\n    <h1 className=\"text-gray-100 font-bold text-1xl sm:text-2xl lg:text-3xl leading-none py-10\">\n      {children}\n    </h1>\n  )\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport Seo from \"../components/seo\"\nimport Layout from \"../components/layout\"\nimport Title from \"../components/field/title\"\nimport SubTitle from \"../components/field/subtitle\"\n\nconst About = () => {\n  const fullTitle = \"About\"\n  const subTitle = \"Gravity and Trails\"\n  const coverImage = \"../images/gravity-in-maine.jpeg\"\n  const socialImage = \"/gear-page.jpeg\"\n  const thisPath = \"/about\"\n  return (\n    <Layout>\n      <Seo\n        title={fullTitle}\n        description=\"Information about myself, this website, and the trails I have hiked.\"\n        keywords={[\n          `Pacific Crest Trail`,\n          `Appalachian Trail`,\n          `Continental Divide Trail`,\n          `Mojave Desert`,\n          `Sierra Nevada`,\n          `Great Smoky Mountains`,\n          `White Mountains`,\n          `Springer Mountain`,\n          `Mount Katahdin`,\n          \"Benton MacKaye\",\n          \"Pinhoti\",\n          `AT`,\n          `PCT`,\n          `CDT`,\n          `thru-hiking`,\n          `thru-gear`,\n          `Triple Crown`,\n          `backpacking`,\n          `hiking`,\n          `trail`,\n          `long distance hiking`,\n          `blog`,\n          `Gravity`,\n          \"Hike with Gravity\",\n        ]}\n        nodePath={thisPath}\n        nodeImage={socialImage}\n      />\n      <div className=\"main__content about-list-page\">\n        <div className=\"h-screen relative max-h-96 list-page\">\n          <div className=\"heading-container absolute flex justify-center items-center bottom-20 w-full\">\n            <div className=\"mx-2 text-center w-9/12 cover-text\">\n              <Title>{fullTitle}</Title>\n              <SubTitle>{subTitle}</SubTitle>\n            </div>\n          </div>\n\n          <div className=\"fixed -z-10 cover-image h-screen max-h-96\">\n            <div className=\"w-full\">\n              <StaticImage\n                alt=\"Gravity on the Pacific Crest Trail\"\n                src={coverImage}\n                className=\"cover-img h-screen max-h-96\"\n                loading=\"eager\"\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"relative z-0 bg-white\">\n          <div className=\"mx-auto max-w-5xl\">\n            <div className=\"mt-6 text-2xl prose mx-auto max-w-3xl px-5 py-4 text-gravBlack\">\n              <p>\n                Here is a little information about me, this site, and some of\n                the trails I have hiked.\n              </p>\n            </div>\n          </div>\n          <div className=\"mx-auto max-w-5xl py-2.5\">\n            <div className=\"gear-list-teasers\">\n              <article className=\"hike-list__item\">\n                <Link to={\"/about/gravity\"}>\n                  <div className=\"hike-list__text\">\n                    <h3>Gravity</h3>\n                  </div>\n                  <div className=\"hike-list__image\">\n                    <StaticImage\n                      alt=\"A photo of Gravity\"\n                      src=\"../images/gravity_teaser.jpg\"\n                      width=\"330\"\n                      aspectRatio={1}\n                      className=\"blog-thumb\"\n                    />\n                  </div>\n                </Link>\n              </article>\n              <article className=\"hike-list__item\">\n                <Link to={\"/about/my-trail-name\"}>\n                  <div className=\"hike-list__text\">\n                    <h3>My Trail Name</h3>\n                  </div>\n                  <div className=\"hike-list__image\">\n                    <StaticImage\n                      alt=\"Gravity standing on Beauty Spot on the AT\"\n                      src=\"../images/gravity-trail_teaser.jpeg\"\n                      width=\"330\"\n                      aspectRatio={1}\n                      className=\"blog-thumb\"\n                    />\n                  </div>\n                </Link>\n              </article>\n              <article className=\"hike-list__item\">\n                <Link to={\"/about/this-site\"}>\n                  <div className=\"hike-list__text\">\n                    <h3>This Site</h3>\n                  </div>\n                  <div className=\"hike-list__image\">\n                    <StaticImage\n                      alt=\"A computer screen displays website code\"\n                      src=\"../images/about-site_teaser.jpeg\"\n                      width=\"330\"\n                      aspectRatio={1}\n                      className=\"blog-thumb\"\n                    />\n                  </div>\n                </Link>\n              </article>\n              <article className=\"hike-list__item\">\n                <Link to={\"/about/the-appalachian-trail\"}>\n                  <div className=\"hike-list__text\">\n                    <h3>The Appalachian Trail</h3>\n                  </div>\n                  <div className=\"hike-list__image\">\n                    <StaticImage\n                      alt=\"A rock in Roan Highlands\"\n                      src=\"../images/at_teaser.jpeg\"\n                      width=\"330\"\n                      aspectRatio={1}\n                      className=\"blog-thumb\"\n                    />\n                  </div>\n                </Link>\n              </article>\n              <article className=\"hike-list__item\">\n                <Link to={\"/about/the-pacific-crest-trail\"}>\n                  <div className=\"hike-list__text\">\n                    <h3>The Pacific Crest Trail</h3>\n                  </div>\n                  <div className=\"hike-list__image\">\n                    <StaticImage\n                      alt=\"The PCT in Washington\"\n                      src=\"../images/pct_teaser.jpeg\"\n                      width=\"330\"\n                      aspectRatio={1}\n                      className=\"blog-thumb\"\n                    />\n                  </div>\n                </Link>\n              </article>\n              <article className=\"hike-list__item\">\n                <Link to={\"/about/the-continental-divide-trail\"}>\n                  <div className=\"hike-list__text\">\n                    <h3>The Continental Divide Trail</h3>\n                  </div>\n                  <div className=\"hike-list__image\">\n                    <StaticImage\n                      alt=\"Wind River Range\"\n                      src=\"../images/cdt_teaser.jpeg\"\n                      width=\"330\"\n                      aspectRatio={1}\n                      className=\"blog-thumb\"\n                    />\n                  </div>\n                </Link>\n              </article>\n              <article className=\"hike-list__item\">\n                <Link to={\"/about/the-benton-mackaye-trail\"}>\n                  <div className=\"hike-list__text\">\n                    <h3>The Benton MacKaye Trail</h3>\n                  </div>\n                  <div className=\"hike-list__image\">\n                    <StaticImage\n                      alt=\"A creek on the BMT\"\n                      src=\"../images/bmt_teaser.jpeg\"\n                      width=\"330\"\n                      aspectRatio={1}\n                      className=\"blog-thumb\"\n                    />\n                  </div>\n                </Link>\n              </article>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default About\n"],"names":["s","l","u","d","e","console","warn","c","message","t","h","b","map","src","width","join","g","lastIndexOf","a","slice","length","p","layout","i","r","o","height","sourceMetadata","breakpoints","aspectRatio","formats","toLowerCase","n","Math","round","m","generateImageSource","filename","format","fit","options","f","pluginName","k","reporter","E","M","backgroundColor","S","placeholderURL","Error","N","Set","size","has","delete","add","x","Object","entries","filter","outputPixelDensities","v","y","sizes","presentationWidth","presentationHeight","unscaledWidth","w","I","sources","W","forEach","Boolean","find","fallback","srcSet","push","type","j","images","placeholder","Array","from","concat","sort","min","includes","Number","MAX_SAFE_INTEGER","max","GATSBY___IMAGE","gatsbyImageData","gatsbyImage","childImageSharp","baseUrl","urlBuilder","sourceWidth","sourceHeight","media","image","process","env","NODE_ENV","apply","R","_","loading","alt","shouldLoad","createElement","decoding","A","key","propTypes","string","isRequired","bool","displayName","exact","arrayOf","oneOfType","O","T","z","MainImage","Fragment","L","q","dangerouslySetInnerHTML","__html","C","style","paddingTop","maxWidth","display","role","position","D","children","P","H","F","NativeScriptLoading","replace","B","as","className","class","imgClassName","imgStyle","objectFit","objectPosition","overflow","verticalAlign","top","left","bottom","right","opacity","transition","transform","willChange","G","V","__imageData","__error","U","GatsbyImageServer","number","call","arguments","X","Y","GatsbyImage","Placeholder","StaticImage","generateImageData","getImage","getImageData","getLowResolutionImageURL","getSrc","getSrcSet","withArtDirection","React","PostSubTitle","PostTitle","Link","Seo","Layout","Title","SubTitle","About","fullTitle","subTitle","coverImage","socialImage","thisPath","title","description","keywords","nodePath","nodeImage","require","to"],"sourceRoot":""}