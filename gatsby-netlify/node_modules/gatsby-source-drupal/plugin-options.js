"use strict";

exports.__esModule = true;
exports.setOptions = exports.getOptions = void 0;
let options = {};
const mutateOptions = options => {
  var _options$languageConf, _options$languageConf2;
  if (options !== null && options !== void 0 && (_options$languageConf = options.languageConfig) !== null && _options$languageConf !== void 0 && (_options$languageConf2 = _options$languageConf.enabledLanguages) !== null && _options$languageConf2 !== void 0 && _options$languageConf2.length) {
    // Support renamed language codes in Drupal
    options.languageConfig.enabledLanguages.forEach(lang => {
      if (typeof lang === `object`) {
        // move the as langcode of the complex code to the enabled languages array
        options.languageConfig.enabledLanguages.push(lang.as);
        // then move the complex lang-code to a different array
        options.languageConfig.renamedEnabledLanguages ||= [];
        options.languageConfig.renamedEnabledLanguages.push(lang);
      }
    });

    // since we moved all the object enabled languages to a new array, we can remove them from enabledLanguages
    options.languageConfig.enabledLanguages = options.languageConfig.enabledLanguages.filter(lang => typeof lang === `string`);
  }
  return options;
};
const setOptions = newOptions => {
  options = mutateOptions(newOptions);
};
exports.setOptions = setOptions;
const getOptions = () => options;
exports.getOptions = getOptions;